<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>长夜不是宿醉的开始</title>
  
  <subtitle>16061182的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://16061182.com/"/>
  <updated>2020-02-20T09:29:06.194Z</updated>
  <id>http://16061182.com/</id>
  
  <author>
    <name>16061182</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux配置Anaconda环境</title>
    <link href="http://16061182.com/2020/02/20/Linux%E9%85%8D%E7%BD%AEanaconda%E7%8E%AF%E5%A2%83/"/>
    <id>http://16061182.com/2020/02/20/Linux配置anaconda环境/</id>
    <published>2020-02-20T08:47:46.768Z</published>
    <updated>2020-02-20T09:29:06.194Z</updated>
    
    <content type="html"><![CDATA[<ul><li>下载</li></ul><p>想要用anaconda安装特定版本的python环境，就要安装支持该版本python的anaconda</p><p><a href="https://blog.csdn.net/yuejisuo1948/article/details/81043823" target="_blank" rel="noopener">anaconda和python版本对照表</a></p><p><a href="https://repo.continuum.io/archive/" target="_blank" rel="noopener">anaconda历史版本下载地址</a></p><ul><li>安装</li></ul><p>进入下载的.sh文件所在目录，例如文件名是Anaconda3-5.2.0-Linux-x86_64.sh，则输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ./Anaconda3-5.2.0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>之后一路按回车或yes即可，最后问是否安装VScode可以视情况选择是否安装。</p><ul><li>测试</li></ul><p>输入以下命令来查看conda版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><p>然后使用<code>python</code>命令查看python版本，若是刚才安装的anaconda自带的默认python版本则说明安装成功，例如Anaconda3-5.2.0对应的默认版本为Python 3.6.5。</p><p>若安装过程没有出错但<code>conda --version</code>命令不存在，这时就需要手动更新一下bash，进入anaconda文件夹（例如anaconda3）的外部，输入以下命令即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH="~/anaconda3/bin:$PATH"'</span> &gt;&gt; ~/.bashr</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>具体操作见下文</p><p><a href="https://blog.csdn.net/baidu_38263564/article/details/81672799?utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">anaconda的安装和卸载及安装完成后无法使用conda解决办法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;下载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想要用anaconda安装特定版本的python环境，就要安装支持该版本python的anaconda&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/yuejisuo1948/article/det
      
    
    </summary>
    
      <category term="原创" scheme="http://16061182.com/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="教程" scheme="http://16061182.com/categories/%E5%8E%9F%E5%88%9B/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="anaconda" scheme="http://16061182.com/tags/anaconda/"/>
    
      <category term="conda" scheme="http://16061182.com/tags/conda/"/>
    
  </entry>
  
  <entry>
    <title>github api简单介绍</title>
    <link href="http://16061182.com/2020/02/12/github%20api%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://16061182.com/2020/02/12/github api简单介绍/</id>
    <published>2020-02-11T20:16:10.738Z</published>
    <updated>2020-02-20T09:33:40.652Z</updated>
    
    <content type="html"><![CDATA[<p>用爬虫爬取github数据的时候，github api是个非常有用的工具。使用以下地址即可访问github api（&lt;用户名&gt;和&lt;仓库名&gt;用真实名称替换）。</p><ul><li>用户信息：<a href="https://api.github.com/users/" target="_blank" rel="noopener">https://api.github.com/users/</a>&lt;用户名&gt;</li><li>所有仓库：<a href="https://api.github.com/users/" target="_blank" rel="noopener">https://api.github.com/users/</a>&lt;用户名&gt;/repos</li><li>单个仓库：<a href="https://api.github.com/repos/" target="_blank" rel="noopener">https://api.github.com/repos/</a>&lt;用户名&gt;/&lt;仓库名&gt;</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用爬虫爬取github数据的时候，github api是个非常有用的工具。使用以下地址即可访问github api（&amp;lt;用户名&amp;gt;和&amp;lt;仓库名&amp;gt;用真实名称替换）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户信息：&lt;a href=&quot;https://api.github.
      
    
    </summary>
    
      <category term="原创" scheme="http://16061182.com/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="教程" scheme="http://16061182.com/categories/%E5%8E%9F%E5%88%9B/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="github" scheme="http://16061182.com/tags/github/"/>
    
      <category term="爬虫" scheme="http://16061182.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>CNN相关知识&amp;论文阅读笔记</title>
    <link href="http://16061182.com/2020/01/06/CNN%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    <id>http://16061182.com/2020/01/06/CNN相关知识/</id>
    <published>2020-01-06T06:49:55.246Z</published>
    <updated>2020-01-06T16:08:18.839Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这几天看了几篇CNN相关论文，看的过程中学到了一些新的算法和网络模型，也重温了一下CNN的基础知识。由于我知识水平十分有限，自己总结这些知识难免有疏漏；又看到网上的一些介绍这些知识的博客写得真的不错，因此干脆把这些博客总结在此，希望对各位的学习有所帮助。</p></blockquote><h1 id="一些算法和模型"><a href="#一些算法和模型" class="headerlink" title="一些算法和模型"></a>一些算法和模型</h1><p><a href="https://blog.csdn.net/qq_17109251/article/details/82823279" target="_blank" rel="noopener">概率图模型(Probabilistic Graphical Model)链接1</a>    <a href="https://mp.weixin.qq.com/s?src=3&timestamp=1578313401&ver=1&signature=gNkHjxyIfDfLuuR8Vmxxt4Q-Lqz0a2MHtWDTW807L*N15FhZK-Ka1BP49Hgd8RYz5IFh2*UTseaG8za6Ts2wjFB4IFfExc8qPz*xbUwAKq5cvUghUhlqDkhU0fZnAYaFTS3oNZ4ADtgRmBfx1iumi1DKyBHxpVYCLnEonur*foE=" target="_blank" rel="noopener">链接2</a></p><p>《Convolutional Pose Machines》这篇文章的方法的特色和优势之一就是没有使用图模型</p><p><a href="https://www.jianshu.com/p/d452b5615850" target="_blank" rel="noopener">非极大值抑制(Non-Maximum Suppression)</a> </p><p>《Realtime Multi-Person 2D Pose Estimation using Part Afﬁnity Fields》2.2最末：用于确定候选关节点的位置</p><p><a href="https://blog.csdn.net/dark_scope/article/details/8880547" target="_blank" rel="noopener">匈牙利算法(Hungarian algorithm)</a></p><p>《Realtime Multi-Person 2D Pose Estimation using Part Afﬁnity Fields》2.4式13、14下方：最优匹配</p><p><a href="https://blog.csdn.net/qq_27871973/article/details/82973048" target="_blank" rel="noopener">上采样方法(upsampling)</a></p><p>《3D Hand Shape and Pose Estimation from a Single RGB Image》1、4.1：相当于最大池化的逆</p><p><a href="https://blog.csdn.net/wangzi371312/article/details/81174452" target="_blank" rel="noopener">堆叠沙漏网络(stacked hourglass network)</a></p><p>《3D Hand Shape and Pose Estimation from a Single RGB Image》4.1：从初始图像生成2D热点图</p><p><a href="https://www.cnblogs.com/wuliytTaotao/archive/2018/09/15/9560205.html" target="_blank" rel="noopener">残差网络(Residual Networks, ResNets)</a></p><p>《3D Hand Shape and Pose Estimation from a Single RGB Image》4.1：根据2D热点和feature maps生成latent feature vector，作为Graph CNN的输入</p><p><a href="https://www.jiqizhixin.com/articles/2019-01-07-8" target="_blank" rel="noopener">图神经网络(Graph Neural Network, GNN)链接1</a>    <a href="https://blog.csdn.net/tmb8z9vdm66wh68vx1/article/details/85961396" target="_blank" rel="noopener">链接2</a></p><p>《3D Hand Shape and Pose Estimation from a Single RGB Image》</p><p><a href="https://www.cnblogs.com/shushen/p/5987280.html" target="_blank" rel="noopener">骨骼蒙皮动画算法(Linear Blending Skinning)</a></p><p>《3D Hand Shape and Pose from Images in the Wild》</p><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p><a href="https://blog.csdn.net/autocyz/article/details/83114245" target="_blank" rel="noopener">神经网络中的各种优化方法</a></p><p><a href="https://www.jianshu.com/p/9305d31962d8" target="_blank" rel="noopener">详解CNN感受野</a></p><p><a href="https://www.cnblogs.com/charlotte77/p/10455900.html" target="_blank" rel="noopener">如何解决数据不平衡问题</a></p><p><a href="https://blog.csdn.net/qq_28448117/article/details/79199835" target="_blank" rel="noopener">目标函数、损失函数和代价函数</a></p><blockquote><p>f(X)关于训练集的平均损失称作<strong>经验风险</strong>(empirical risk)······大白话说就是它的函数太复杂了，都有四次方了，这就引出了下面的概念，我们不仅要让经验风险最小化，还要让<strong>结构风险</strong>最小化。</p></blockquote><p><a href="https://blog.csdn.net/charles_thegod/article/details/83588212" target="_blank" rel="noopener">正则化</a></p><blockquote><p>我们从前面的图形可以看出，正是那些高次项导致了过拟合的产生，所以如果我们能让这些高次项的系数接近于0的话，我们就能很好的拟合了。</p></blockquote><p><a href="https://segmentfault.com/a/1190000015332397" target="_blank" rel="noopener">主成分分析PCA(principal component analysis)</a></p><h1 id="论文下载-来自arXiv"><a href="#论文下载-来自arXiv" class="headerlink" title="论文下载(来自arXiv)"></a>论文下载(来自arXiv)</h1><p><a href="http://xxx.itp.ac.cn/pdf/1602.00134.pdf" target="_blank" rel="noopener">《Convolutional Pose Machines》</a></p><p><a href="http://xxx.itp.ac.cn/pdf/1611.08050.pdf" target="_blank" rel="noopener">《Realtime Multi-Person 2D Pose Estimation using Part Afﬁnity Fields》</a></p><p><a href="http://xxx.itp.ac.cn/pdf/1903.00812.pdf" target="_blank" rel="noopener">《3D Hand Shape and Pose Estimation from a Single RGB Image》</a></p><p><a href="http://xxx.itp.ac.cn/pdf/1902.03451.pdf" target="_blank" rel="noopener">《3D Hand Shape and Pose from Images in the Wild》</a></p><p>从arXiv上下载论文太慢？可以按照<a href="https://blog.csdn.net/seasermy/article/details/95176357" target="_blank" rel="noopener">这篇文章</a>介绍的方法，使用中科院的arXiv镜像，具体方法是把域名里的<strong><a href="https://arxiv.org" target="_blank" rel="noopener">https://arxiv.org</a></strong>替换成<strong><a href="http://xxx.itp.ac.cn" target="_blank" rel="noopener">http://xxx.itp.ac.cn</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;这几天看了几篇CNN相关论文，看的过程中学到了一些新的算法和网络模型，也重温了一下CNN的基础知识。由于我知识水平十分有限，自己总结这些知识难免有疏漏；又看到网上的一些介绍这些知识的博客写得真的不错，因此干脆把这些博客总结在此，希望对各位的学习有所
      
    
    </summary>
    
      <category term="笔记" scheme="http://16061182.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="CNN" scheme="http://16061182.com/tags/CNN/"/>
    
      <category term="手势识别" scheme="http://16061182.com/tags/%E6%89%8B%E5%8A%BF%E8%AF%86%E5%88%AB/"/>
    
      <category term="CVPR" scheme="http://16061182.com/tags/CVPR/"/>
    
  </entry>
  
  <entry>
    <title>argparse简介</title>
    <link href="http://16061182.com/2019/08/18/argparse%E7%AE%80%E4%BB%8B/"/>
    <id>http://16061182.com/2019/08/18/argparse简介/</id>
    <published>2019-08-18T07:02:49.526Z</published>
    <updated>2019-08-18T08:36:37.387Z</updated>
    
    <content type="html"><![CDATA[<h2 id="argparse简介"><a href="#argparse简介" class="headerlink" title="argparse简介"></a>argparse简介</h2><p>本文为博主原创，转载请注明出处！</p><p>argparse是一个<strong>命令行参数解析</strong>模块，还是挺有用的，下面介绍一些基本用法。</p><h3 id="位置参数"><a href="#位置参数" class="headerlink" title="位置参数"></a>位置参数</h3><p>test.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.description = <span class="string">'计算乘积'</span></span><br><span class="line">parser.add_argument(<span class="string">"ParA"</span>, help=<span class="string">'我是A'</span>, type=int)</span><br><span class="line">parser.add_argument(<span class="string">"ParB"</span>, help=<span class="string">'我是B'</span>, type=int)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"><span class="keyword">if</span> args.ParA:</span><br><span class="line">    print(<span class="string">"A is"</span>,args.ParA)</span><br><span class="line"><span class="keyword">if</span> args.ParB:</span><br><span class="line">    print(<span class="string">"B is"</span>,args.ParB)</span><br><span class="line"><span class="keyword">if</span> args.ParA <span class="keyword">and</span> args.ParB:</span><br><span class="line">    print(<span class="string">"A和B的乘积"</span>,args.ParA*args.ParB)</span><br></pre></td></tr></table></figure><p>命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py 5 4</span><br><span class="line">A is 5</span><br><span class="line">B is 4</span><br><span class="line">A和B的乘积 20</span><br></pre></td></tr></table></figure><p>注：</p><ul><li><p>如果输入命令<code>python test.py --help</code>，会给出本程序所需所有参数的帮助信息，在本例中结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">usage: test.py [-h] ParA ParB</span><br><span class="line"></span><br><span class="line">计算乘积</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">  ParA        我是A</span><br><span class="line">  ParB        我是B</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help  show this help message and exit</span><br></pre></td></tr></table></figure></li><li><p><code>.add_argument</code>中的<code>ParA</code>就是位置参数，在命令行输入命令的时候会根据参数的顺序为<code>ParA</code>和<code>ParB</code>赋值，<strong>位置参数不全的话会报错</strong>。</p></li><li><p>若不指定<code>type = int</code>，会默认输入参数为str。</p></li></ul><hr><h3 id="可选参数"><a href="#可选参数" class="headerlink" title="可选参数"></a>可选参数</h3><p>test.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.description = <span class="string">'计算乘积'</span></span><br><span class="line">parser.add_argument(<span class="string">"--ParA"</span>, <span class="string">'-a'</span>, help=<span class="string">'我是A'</span>, type=int)</span><br><span class="line">parser.add_argument(<span class="string">'-b'</span>, <span class="string">"--ParB"</span>, help=<span class="string">'我是B'</span>, type=int)</span><br><span class="line">parser.add_argument(<span class="string">'-c'</span>, <span class="string">"--ParC"</span>, help=<span class="string">'我是C'</span>, action=<span class="string">'store_true'</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"><span class="keyword">if</span> args.ParA:</span><br><span class="line">    print(<span class="string">"A is"</span>,args.ParA)</span><br><span class="line"><span class="keyword">if</span> args.ParB:</span><br><span class="line">    print(<span class="string">"B is"</span>,args.ParB)</span><br><span class="line"><span class="keyword">if</span> args.ParC:</span><br><span class="line">    print(<span class="string">"True"</span>)</span><br></pre></td></tr></table></figure><p>命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py --ParB 5 -a 4 --ParC</span><br><span class="line">A is 4</span><br><span class="line">B is 5</span><br><span class="line">True</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>把<code>ParA</code>改为<code>--ParA</code>之后，就变成了可选参数，相比位置参数，可选参数<strong>不要求顺序</strong>、<strong>不要求输入全部参数</strong>。</li><li>命令行中可以用<code>-a</code>和<code>-b</code>可以代替<code>--ParA</code>和<code>--ParB</code>，<code>-aa</code>代替<code>--ParA --ParA</code>，使输入简化。</li><li><code>action=&#39;store_true&#39;</code>使<code>--ParC</code>不接收值，该参数只起到通过<code>if args.ParC</code>判断是非的作用。如果命令行中写了<code>--ParC</code>，<code>args.ParC</code>的值为True。</li></ul><hr><h3 id="位置参数和可选参数结合"><a href="#位置参数和可选参数结合" class="headerlink" title="位置参数和可选参数结合"></a>位置参数和可选参数结合</h3><p>（1）test.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">"ParA"</span>, help=<span class="string">'我是A'</span>, type=int)</span><br><span class="line">parser.add_argument(<span class="string">'-b'</span>, <span class="string">"--ParB"</span>, help=<span class="string">'我是B'</span>, type=int, choices=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">args = parser.parse_args()</span><br><span class="line">answer = args.ParA ** <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> args.ParB == <span class="number">2</span>:</span><br><span class="line">    print(<span class="string">"the square of &#123;&#125; equals &#123;&#125;"</span>.format(args.ParA, answer))</span><br><span class="line"><span class="keyword">elif</span> args.ParB == <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">"&#123;&#125;^2 == &#123;&#125;"</span>.format(args.ParA, answer))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(answer)</span><br></pre></td></tr></table></figure><p>命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py 4 -b 2</span><br><span class="line">the square of 4 equals 16</span><br><span class="line"></span><br><span class="line">$ python test.py -b 1 4</span><br><span class="line">4^2 == 16</span><br><span class="line"></span><br><span class="line">$ python test.py -b 3 4</span><br><span class="line">usage: test.py [-h] [--ParA PARA] [-b &#123;0,1,2&#125;]</span><br><span class="line">test.py: error: argument -b/--ParB: invalid choice: 3 (choose from 0, 1, 2)</span><br><span class="line"></span><br><span class="line">$ python test.py -h</span><br><span class="line">usage: test.py [-h] [-b &#123;0,1,2&#125;] ParA</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">  ParA                  我是A</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -b &#123;0,1,2&#125;, --ParB &#123;0,1,2&#125;</span><br><span class="line">                        我是B</span><br></pre></td></tr></table></figure><p>注：</p><ul><li><code>ParA</code>和<code>ParB</code>的位置可以互换。</li><li><code>choices=[0, 1, 2]</code>为<code>ParB</code>规定范围。</li></ul><p>（2）test.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">"ParA"</span>, help=<span class="string">'我是A'</span>, type=int)</span><br><span class="line">parser.add_argument(<span class="string">'-b'</span>, <span class="string">"--ParB"</span>, help=<span class="string">'我是B'</span>, action=<span class="string">'count'</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line">answer = args.ParA ** <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> args.ParB == <span class="number">2</span>:</span><br><span class="line">    print(<span class="string">"the square of &#123;&#125; equals &#123;&#125;"</span>.format(args.ParA, answer))</span><br><span class="line"><span class="keyword">elif</span> args.ParB == <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">"&#123;&#125;^2 == &#123;&#125;"</span>.format(args.ParA, answer))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(answer)</span><br></pre></td></tr></table></figure><p>命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py 4</span><br><span class="line">16</span><br><span class="line"></span><br><span class="line">$ python test.py 4 -b</span><br><span class="line">4^2 == 16</span><br><span class="line"></span><br><span class="line">$ python test.py 4 -bb</span><br><span class="line">the square of 4 equals 16</span><br><span class="line"></span><br><span class="line">$ python test.py 4 --ParB --ParB</span><br><span class="line">the square of 4 equals 16</span><br></pre></td></tr></table></figure><p>注：</p><ul><li><code>action=&#39;count&#39;</code>和<code>action=&#39;store_true&#39;</code>类似，该输入不需要具体值，而是根据命令行输入的该参数名的数量来决定该参数的值。</li><li>对上述(2)test.py进行修改，在<code>else</code>前添加如下代码，则不输入<code>--ParB</code>时会报错，因为此时<code>args.ParB</code>是None而不是值为0。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">elif args.ParB &gt; 2:</span><br><span class="line">    print(&apos;ParB &gt; 2&apos;)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py 4</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;test.py&quot;, line 11, in &lt;module&gt;</span><br><span class="line">    elif args.ParB &gt; 2:</span><br><span class="line">TypeError: &apos;&gt;&apos; not supported between instances of &apos;NoneType&apos; and &apos;int&apos;</span><br></pre></td></tr></table></figure><ul><li>若想让上述情况不报错，可以设置<code>args.ParB</code>默认值为0，只需<code>parser.add_argument(&#39;-b&#39;, &quot;--ParB&quot;, help=&#39;我是B&#39;, default=0, action=&#39;count&#39;)</code>。</li></ul><hr><h3 id="矛盾的选项"><a href="#矛盾的选项" class="headerlink" title="矛盾的选项"></a>矛盾的选项</h3><p>test.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">group = parser.add_mutually_exclusive_group()</span><br><span class="line">group.add_argument(<span class="string">"-t"</span>, <span class="string">"--true"</span>, action=<span class="string">"store_true"</span>)</span><br><span class="line">group.add_argument(<span class="string">"-f"</span>, <span class="string">"--false"</span>, action=<span class="string">"store_true"</span>)</span><br><span class="line">parser.add_argument(<span class="string">"ParA"</span>, help=<span class="string">'我是A'</span>, type=int)</span><br><span class="line">parser.add_argument(<span class="string">"ParB"</span>, help=<span class="string">'我是B'</span>, type=int)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line">answer = args.ParA * args.ParB</span><br><span class="line"><span class="keyword">if</span> args.true:</span><br><span class="line">    print(<span class="string">'true'</span>, answer)</span><br><span class="line"><span class="keyword">elif</span> args.false:</span><br><span class="line">    print(<span class="string">'false'</span>, answer)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'else'</span>, answer)</span><br></pre></td></tr></table></figure><p>命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ python test.py 4 5 -t</span><br><span class="line">true 20</span><br><span class="line"></span><br><span class="line">$ python test.py 4 5 -f</span><br><span class="line">false 20</span><br><span class="line"></span><br><span class="line">$ python test.py 4 5 -tf</span><br><span class="line">usage: test.py [-h] [-t | -f] ParA ParB</span><br><span class="line">test.py: error: argument -f/--false: not allowed with argument -t/--true</span><br></pre></td></tr></table></figure><p>注：</p><ul><li><code>parser.add_mutually_exclusive_group()</code>内的参数是相互冲突的，在命令行中输入其中一个，就不能输入其他的。</li></ul><hr><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>argparse模块还有很多其他的功能，转到<a href="https://docs.python.org/3.6/library/argparse.html#module-argparse" target="_blank" rel="noopener">argparse</a>以查看更多内容。<br>参考文章：</p><ul><li><a href="https://www.jianshu.com/p/00425f6c0936" target="_blank" rel="noopener">https://www.jianshu.com/p/00425f6c0936</a></li><li><a href="https://docs.python.org/3.6/howto/argparse.html#introducing-optional-arguments" target="_blank" rel="noopener">https://docs.python.org/3.6/howto/argparse.html#introducing-optional-arguments</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;argparse简介&quot;&gt;&lt;a href=&quot;#argparse简介&quot; class=&quot;headerlink&quot; title=&quot;argparse简介&quot;&gt;&lt;/a&gt;argparse简介&lt;/h2&gt;&lt;p&gt;本文为博主原创，转载请注明出处！&lt;/p&gt;
&lt;p&gt;argparse是一个&lt;st
      
    
    </summary>
    
      <category term="原创" scheme="http://16061182.com/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="教程" scheme="http://16061182.com/categories/%E5%8E%9F%E5%88%9B/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="argparse" scheme="http://16061182.com/tags/argparse/"/>
    
      <category term="python" scheme="http://16061182.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB蚁群算法</title>
    <link href="http://16061182.com/2019/08/05/MATLAB%E8%9A%81%E7%BE%A4%E7%AE%97%E6%B3%95/"/>
    <id>http://16061182.com/2019/08/05/MATLAB蚁群算法/</id>
    <published>2019-08-05T13:20:15.743Z</published>
    <updated>2019-08-05T13:44:03.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MATLAB蚁群算法"><a href="#MATLAB蚁群算法" class="headerlink" title="MATLAB蚁群算法"></a>MATLAB蚁群算法</h2><h4 id="之前做的一个作业，想复习MATLAB语法的话可以看看"><a href="#之前做的一个作业，想复习MATLAB语法的话可以看看" class="headerlink" title="之前做的一个作业，想复习MATLAB语法的话可以看看"></a>之前做的一个作业，想复习MATLAB语法的话可以看看</h4><ul><li><p>算法（tsp_ant.m）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tsp_ant</span><span class="params">(inputx,inputy)</span></span></span><br><span class="line">    tic;</span><br><span class="line"><span class="comment">%   inputx和inputy都是一维列向量，分别代表城市的x横坐标和纵坐标</span></span><br><span class="line">    C = [inputx,inputy]; <span class="comment">%记录了城市的坐标</span></span><br><span class="line">    times_limit = <span class="number">500</span>; <span class="comment">%最大迭代次数</span></span><br><span class="line">    m = <span class="number">20</span>; <span class="comment">%蚂蚁数量</span></span><br><span class="line">    n = <span class="built_in">size</span>(inputx,<span class="number">1</span>); <span class="comment">%城市数量，n为inputx第一维的长度</span></span><br><span class="line">    graph = <span class="built_in">zeros</span>(n,n); <span class="comment">%存储距离</span></span><br><span class="line">    alpha = <span class="number">1</span>; <span class="comment">%信息素的加权值</span></span><br><span class="line">    <span class="built_in">beta</span> = <span class="number">3</span>; <span class="comment">%能见度的加权值</span></span><br><span class="line">    ro = <span class="number">0.1</span>; <span class="comment">%信息素蒸发系数%每次使用前更新</span></span><br><span class="line">    Q = <span class="number">10</span>^<span class="number">6</span>; <span class="comment">%信息素增加强度系数</span></span><br><span class="line">    best_route = <span class="built_in">zeros</span>(times_limit,n); <span class="comment">%每次迭代的最佳路线</span></span><br><span class="line">    best_length = <span class="built_in">inf</span> * <span class="built_in">ones</span>(times_limit,<span class="number">1</span>); <span class="comment">%每次迭代的最佳路线的长度</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">%   Step1 : 变量初始化</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:n</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:n</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">i</span> ~= <span class="built_in">j</span>)</span><br><span class="line">                graph(<span class="built_in">i</span>,<span class="built_in">j</span>) = ((C(<span class="built_in">i</span>,<span class="number">1</span>) - C(<span class="built_in">j</span>,<span class="number">1</span>))^<span class="number">2</span> + (C(<span class="built_in">i</span>,<span class="number">2</span>) - C(<span class="built_in">j</span>,<span class="number">2</span>))^<span class="number">2</span>)^<span class="number">0.5</span>; </span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                graph(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="built_in">realmin</span>; </span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    iota = <span class="number">1.</span>/graph; </span><br><span class="line">    tau = <span class="built_in">ones</span>(n,n); </span><br><span class="line">    tabu = <span class="built_in">zeros</span>(m,n);  </span><br><span class="line">    average_length = <span class="built_in">zeros</span>(times_limit,<span class="number">1</span>); </span><br><span class="line">    </span><br><span class="line"><span class="comment">%   Step2 : 放置蚂蚁</span></span><br><span class="line">    <span class="keyword">for</span> time = <span class="number">1</span>:times_limit </span><br><span class="line">        location = randi(n,<span class="number">1</span>,m);</span><br><span class="line">        tabu(:,<span class="number">1</span>) = (location(<span class="number">1</span>:m))'; </span><br><span class="line">        </span><br><span class="line"><span class="comment">%   Step3 : 蚂蚁完成各自路径</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span>:n </span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:m</span><br><span class="line">                visited = tabu(<span class="built_in">i</span>,<span class="number">1</span>:(<span class="built_in">j</span><span class="number">-1</span>)); </span><br><span class="line">                next_cities = <span class="built_in">zeros</span>(<span class="number">1</span>,(n-<span class="built_in">j</span>+<span class="number">1</span>)); </span><br><span class="line">                next_properties = <span class="built_in">zeros</span>(<span class="number">1</span>,(n-<span class="built_in">j</span>+<span class="number">1</span>)); </span><br><span class="line">                index = <span class="number">1</span>; </span><br><span class="line">                <span class="keyword">for</span> k = <span class="number">1</span>:n</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">ismember</span>(k,visited) == <span class="number">0</span> </span><br><span class="line">                        next_cities(index) = k;</span><br><span class="line">                        index = index + <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">length</span>(next_cities) </span><br><span class="line">                    next_properties(k) = (tau(visited(<span class="keyword">end</span>),next_cities(k))^alpha) * (iota(visited(<span class="keyword">end</span>),next_cities(k))^<span class="built_in">beta</span>);</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                next_properties = next_properties/sum(next_properties);</span><br><span class="line">                <span class="comment">%使用轮盘赌的方法模拟按概率选择下一城市的过程</span></span><br><span class="line">                roulette = cumsum(next_properties);</span><br><span class="line">                pointer = <span class="built_in">rand</span>;</span><br><span class="line">                <span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">length</span>(roulette)</span><br><span class="line">                    <span class="keyword">if</span> roulette(k) &gt;= pointer</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                to_visit = next_cities(k);</span><br><span class="line">                tabu(<span class="built_in">i</span>,<span class="built_in">j</span>) = to_visit; </span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> time &gt;= <span class="number">2</span></span><br><span class="line">            tabu(<span class="number">1</span>,:) = best_route(time<span class="number">-1</span>,:); </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">%   Step4 : 记录本次迭代最佳路线</span></span><br><span class="line">        route_length = <span class="built_in">zeros</span>(m,<span class="number">1</span>); </span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:m</span><br><span class="line">            route_i = tabu(<span class="built_in">i</span>,:); </span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:(n<span class="number">-1</span>)</span><br><span class="line">                route_length(<span class="built_in">i</span>) = route_length(<span class="built_in">i</span>) + graph(route_i(<span class="built_in">j</span>),route_i(<span class="built_in">j</span>+<span class="number">1</span>));</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            route_length(<span class="built_in">i</span>) = route_length(<span class="built_in">i</span>) + graph(route_i(<span class="number">1</span>),route_i(n)); </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        best_length(time) = <span class="built_in">min</span>(route_length); </span><br><span class="line">        [~,loc] = <span class="built_in">min</span>(route_length);</span><br><span class="line">        best_route(time,:) = tabu(loc,:); </span><br><span class="line">        average_length(time) = <span class="built_in">mean</span>(route_length); </span><br><span class="line">        </span><br><span class="line"><span class="comment">%   Step5 : 更新信息素</span></span><br><span class="line">        delta_tau = <span class="built_in">zeros</span>(n,n);</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:m</span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:(n<span class="number">-1</span>) </span><br><span class="line">                delta_tau(tabu(<span class="built_in">i</span>,<span class="built_in">j</span>),tabu(<span class="built_in">i</span>,<span class="built_in">j</span>+<span class="number">1</span>)) = delta_tau(tabu(<span class="built_in">i</span>,<span class="built_in">j</span>),tabu(<span class="built_in">i</span>,<span class="built_in">j</span>+<span class="number">1</span>)) + Q/route_length(<span class="built_in">i</span>); </span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            delta_tau(tabu(<span class="built_in">i</span>,n),tabu(<span class="built_in">i</span>,<span class="number">1</span>)) = delta_tau(tabu(<span class="built_in">i</span>,n),tabu(<span class="built_in">i</span>,<span class="number">1</span>)) + Q/route_length(<span class="built_in">i</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        tau = (<span class="number">1</span>-ro)*tau + delta_tau; </span><br><span class="line">        </span><br><span class="line"><span class="comment">%   Step6 : 路径表格清零</span></span><br><span class="line">        tabu = <span class="built_in">zeros</span>(m,n);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    toc;</span><br><span class="line"><span class="comment">%   Step7 : 绘制图形</span></span><br><span class="line">    [~,loc] = <span class="built_in">min</span>(best_length); </span><br><span class="line">    the_route = best_route(loc,:); </span><br><span class="line">    the_length = best_length(loc); </span><br><span class="line">    <span class="comment">%绘制图1</span></span><br><span class="line">    <span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line">    set(gcf,<span class="string">'unit'</span>,<span class="string">'centimeters'</span>,<span class="string">'position'</span>,[<span class="number">5</span>,<span class="number">5</span>,<span class="number">20</span>,<span class="number">20</span>]);</span><br><span class="line">    axis square;</span><br><span class="line">    <span class="built_in">scatter</span>(C(:,<span class="number">1</span>),C(:,<span class="number">2</span>)); <span class="comment">%绘制散点图</span></span><br><span class="line">    <span class="built_in">hold</span> on</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:n<span class="number">-1</span></span><br><span class="line">        <span class="built_in">plot</span>([C(the_route(<span class="built_in">i</span>),<span class="number">1</span>),C(the_route(<span class="built_in">i</span>+<span class="number">1</span>),<span class="number">1</span>)],[C(the_route(<span class="built_in">i</span>),<span class="number">2</span>),C(the_route(<span class="built_in">i</span>+<span class="number">1</span>),<span class="number">2</span>)],<span class="string">'-rd'</span>,<span class="string">'LineWidth'</span>,<span class="number">3</span>,<span class="string">'MarkerEdgeColor'</span>,<span class="string">'k'</span>,<span class="string">'MarkerFaceColor'</span>,<span class="string">'b'</span>); </span><br><span class="line">        <span class="built_in">hold</span> on</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="built_in">plot</span>([C(the_route(<span class="number">1</span>),<span class="number">1</span>),C(the_route(n),<span class="number">1</span>)],[C(the_route(<span class="number">1</span>),<span class="number">2</span>),C(the_route(n),<span class="number">2</span>)],<span class="string">'-rd'</span>,<span class="string">'LineWidth'</span>,<span class="number">3</span>,<span class="string">'MarkerEdgeColor'</span>,<span class="string">'k'</span>,<span class="string">'MarkerFaceColor'</span>,<span class="string">'b'</span>);</span><br><span class="line">    <span class="built_in">hold</span> on</span><br><span class="line">    xlabel(<span class="string">'x'</span>);</span><br><span class="line">    ylabel(<span class="string">'y'</span>);</span><br><span class="line">    title(<span class="string">'最短路线图'</span>);</span><br><span class="line">    text(<span class="number">72</span>,<span class="number">99</span>,[<span class="string">'最短路径长度 = '</span>,num2str(the_length)]);</span><br><span class="line">    text(<span class="number">72</span>,<span class="number">96</span>,[<span class="string">'历史平均长度 = '</span>,num2str(<span class="built_in">mean</span>(average_length))]);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>应用（控制台）</p></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; x = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">100</span>)*<span class="number">100</span>)'</span><br><span class="line">&gt;&gt; y = <span class="built_in">round</span>(<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">100</span>)*<span class="number">100</span>)'</span><br><span class="line">&gt;&gt; tsp_ant(x,y)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MATLAB蚁群算法&quot;&gt;&lt;a href=&quot;#MATLAB蚁群算法&quot; class=&quot;headerlink&quot; title=&quot;MATLAB蚁群算法&quot;&gt;&lt;/a&gt;MATLAB蚁群算法&lt;/h2&gt;&lt;h4 id=&quot;之前做的一个作业，想复习MATLAB语法的话可以看看&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="杂项" scheme="http://16061182.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="matlab" scheme="http://16061182.com/tags/matlab/"/>
    
      <category term="算法" scheme="http://16061182.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib绘图示例以及一些numpy函数解析</title>
    <link href="http://16061182.com/2019/08/05/matplotlib%E7%BB%98%E5%9B%BE%E7%A4%BA%E4%BE%8B%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%BA%9Bnumpy%E5%87%BD%E6%95%B0%E8%A7%A3%E6%9E%90/"/>
    <id>http://16061182.com/2019/08/05/matplotlib绘图示例以及一些numpy函数解析/</id>
    <published>2019-08-05T13:11:01.696Z</published>
    <updated>2019-08-18T08:30:20.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="matplotlib绘图示例以及一些numpy函数解析"><a href="#matplotlib绘图示例以及一些numpy函数解析" class="headerlink" title="matplotlib绘图示例以及一些numpy函数解析"></a>matplotlib绘图示例以及一些numpy函数解析</h2><h4 id="matplotlib绘图示例代码"><a href="#matplotlib绘图示例代码" class="headerlink" title="matplotlib绘图示例代码"></a>matplotlib绘图示例代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line">sns.set(color_codes=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_image</span><span class="params">(len_record)</span>:</span></span><br><span class="line">    x = [<span class="string">'0~4'</span>,<span class="string">'5~9'</span>,<span class="string">'10~14'</span>,<span class="string">'15~19'</span>,<span class="string">'20~24'</span>,<span class="string">'25~29'</span>,<span class="string">'30~34'</span>,<span class="string">'35~39'</span>,<span class="string">'40~44'</span>,<span class="string">'45~49'</span>,<span class="string">'50~54'</span>,<span class="string">'55~59'</span>,<span class="string">'60~64'</span>,<span class="string">'&gt;=65'</span>]</span><br><span class="line">    y = [<span class="number">0</span>] * <span class="number">14</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">    <span class="keyword">for</span> record <span class="keyword">in</span> len_record:</span><br><span class="line">        ans = int(record / <span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> ans &gt;= <span class="number">13</span>:</span><br><span class="line">            ans = <span class="number">13</span></span><br><span class="line">        y[ans] += <span class="number">1</span></span><br><span class="line">    x = np.array(x)</span><br><span class="line">    y = np.array(y)</span><br><span class="line">    width = <span class="number">0.5</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    plt.bar()参数： </span></span><br><span class="line"><span class="string">1. left：x轴的位置序列，一般采用arange函数产生一个序列； </span></span><br><span class="line"><span class="string">2. height：y轴的数值序列，也就是柱形图的高度，一般就是我们需要展示的数据； </span></span><br><span class="line"><span class="string">3. alpha：透明度 </span></span><br><span class="line"><span class="string">4. width：为柱形图的宽度，一般这是为0.8即可； </span></span><br><span class="line"><span class="string">5. color或facecolor：柱形图填充的颜色； </span></span><br><span class="line"><span class="string">6. edgecolor：图形边缘颜色 </span></span><br><span class="line"><span class="string">7. label：解释每个图像代表的含义 </span></span><br><span class="line"><span class="string">8. linewidth or linewidths or lw：边缘or线的宽度</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    index = np.arange(len(x))</span><br><span class="line">    plt.bar(index, y, width, color=<span class="string">"#87CEFA"</span>)</span><br><span class="line">    plt.xlabel(<span class="string">'length'</span>) <span class="comment">#x轴</span></span><br><span class="line">    plt.ylabel(<span class="string">'quantity'</span>)  <span class="comment"># y轴</span></span><br><span class="line">    plt.title(<span class="string">'total:'</span> + str(len(len_record)))  <span class="comment"># 图像的名称</span></span><br><span class="line">    plt.xticks(index, x, fontsize=<span class="number">8</span>)  <span class="comment"># 将横坐标用cell替换,fontsize用来调整字体的大小</span></span><br><span class="line">    plt.legend()  <span class="comment"># 显示label</span></span><br><span class="line">    <span class="comment"># for i in range(len(x)):</span></span><br><span class="line">    <span class="comment">#     plt.text(x[i], y[i], y[i], ha='center', va='bottom')</span></span><br><span class="line">    <span class="keyword">for</span> xx, yy <span class="keyword">in</span> zip(index, y):</span><br><span class="line">        plt.text(xx, yy + <span class="number">0.1</span>, str(yy), ha=<span class="string">'center'</span>, va=<span class="string">'bottom'</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><h4 id="numpy函数"><a href="#numpy函数" class="headerlink" title="numpy函数"></a>numpy函数</h4><ul><li>np.linspace()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Parameters(参数):</span><br><span class="line">start : 序列的起始点.</span><br><span class="line">stop : 序列的结束点</span><br><span class="line">num : 生成的样本数，默认是<span class="number">50</span>。必须是非负。</span><br><span class="line">endpoint : 如果<span class="literal">True</span>，stop是最后一个样本。否则，它不包括在内。默认为<span class="literal">True</span>。</span><br><span class="line">retstep :  如果<span class="literal">True</span>,返回 (向量, 步长)</span><br><span class="line">dtype :</span><br></pre></td></tr></table></figure><ul><li>np.arange</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;range(<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line">range(<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line">&gt;&gt;&gt;tuple(range(<span class="number">1</span>, <span class="number">5</span>))</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">&gt;&gt;&gt;list(range(<span class="number">1</span>, <span class="number">5</span>))</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;r = range(<span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">&gt;&gt;&gt;type(r)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">range</span>'&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&gt;&gt;&gt;<span class="title">for</span>  <span class="title">i</span> <span class="title">in</span> <span class="title">range</span><span class="params">(<span class="number">1</span>, <span class="number">5</span>)</span>:</span></span><br><span class="line"><span class="meta">... </span>   print(i)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.arange(<span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;range(<span class="number">1</span>, <span class="number">5</span>, <span class="number">.1</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">'float'</span> object cannot be interpreted <span class="keyword">as</span> an integer</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;np.arange(<span class="number">1</span>, <span class="number">5</span>, <span class="number">.5</span>)</span><br><span class="line">array([ <span class="number">1.</span> ,  <span class="number">1.5</span>,  <span class="number">2.</span> ,  <span class="number">2.5</span>,  <span class="number">3.</span> ,  <span class="number">3.5</span>,  <span class="number">4.</span> ,  <span class="number">4.5</span>])</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;range(<span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>)</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>):</span><br><span class="line"><span class="meta">... </span>   print(i)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> np.arange(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line"><span class="meta">... </span>   print(i)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;matplotlib绘图示例以及一些numpy函数解析&quot;&gt;&lt;a href=&quot;#matplotlib绘图示例以及一些numpy函数解析&quot; class=&quot;headerlink&quot; title=&quot;matplotlib绘图示例以及一些numpy函数解析&quot;&gt;&lt;/a&gt;matpl
      
    
    </summary>
    
      <category term="笔记" scheme="http://16061182.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://16061182.com/tags/python/"/>
    
      <category term="绘图" scheme="http://16061182.com/tags/%E7%BB%98%E5%9B%BE/"/>
    
      <category term="numpy" scheme="http://16061182.com/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>torch.unsqueeze()，torch.squeeze()，torch.max()测试</title>
    <link href="http://16061182.com/2019/07/16/torch.unsqueeze()%EF%BC%8Ctorch.squeeze()%EF%BC%8Ctorch.max()%E6%B5%8B%E8%AF%95/"/>
    <id>http://16061182.com/2019/07/16/torch.unsqueeze()，torch.squeeze()，torch.max()测试/</id>
    <published>2019-07-15T17:22:13.601Z</published>
    <updated>2019-08-18T08:33:04.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="torch-unsqueeze-，torch-squeeze-，torch-max-测试"><a href="#torch-unsqueeze-，torch-squeeze-，torch-max-测试" class="headerlink" title="torch.unsqueeze()，torch.squeeze()，torch.max()测试"></a>torch.unsqueeze()，torch.squeeze()，torch.max()测试</h2><p>本文为博主原创，转载请注明出处！</p><ul><li><strong>输入</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">a = [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">    [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]</span><br><span class="line">]</span><br><span class="line">a = torch.LongTensor(a)</span><br><span class="line">aa = [[</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">    [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]</span><br><span class="line">]]</span><br><span class="line">aa = torch.LongTensor(aa)</span><br><span class="line">aaa = [</span><br><span class="line">[</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">    [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">    [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line">    [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">    [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">]</span><br><span class="line">]</span><br><span class="line">aaa = torch.LongTensor(aaa)</span><br><span class="line">print(aaa.size())</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">[in]print(a.size())</span></span><br><span class="line"><span class="string">[out]torch.Size([3, 4])</span></span><br><span class="line"><span class="string">[in]print(aa.size())</span></span><br><span class="line"><span class="string">[out]torch.Size([1, 3, 4])</span></span><br><span class="line"><span class="string">[in]print(aaa.size())</span></span><br><span class="line"><span class="string">[out]torch.Size([2, 3, 4])</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment"># unsqueeze可作为维度的自然数范围是[0,矩阵层数=2]</span></span><br><span class="line">print(<span class="string">'unsqueeze, dim=0:'</span>)</span><br><span class="line">b = torch.unsqueeze(a, dim=<span class="number">0</span>)</span><br><span class="line">print(b)</span><br><span class="line">print(<span class="string">'unsqueeze, dim=1:'</span>)</span><br><span class="line">b = torch.unsqueeze(a, dim=<span class="number">1</span>)</span><br><span class="line">print(b)</span><br><span class="line">print(<span class="string">'unsqueeze, dim=2:'</span>)</span><br><span class="line">b = torch.unsqueeze(a, dim=<span class="number">2</span>)</span><br><span class="line">print(b)</span><br><span class="line">print(<span class="string">'unsqueeze, dim=-1:'</span>)</span><br><span class="line">b = torch.unsqueeze(a, dim=<span class="number">-1</span>)</span><br><span class="line">print(b)</span><br><span class="line">print(<span class="string">'*'</span>*<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># squeeze可作为维度的自然数范围是[0,矩阵层数-1=2]</span></span><br><span class="line">print(<span class="string">'squeeze, dim=0:'</span>) <span class="comment"># 去除最外层</span></span><br><span class="line">c = torch.squeeze(aa, dim=<span class="number">0</span>)</span><br><span class="line">print(c)</span><br><span class="line">print(<span class="string">'squeeze, dim=1:'</span>) <span class="comment"># 无作用</span></span><br><span class="line">c = torch.squeeze(aa, dim=<span class="number">1</span>)</span><br><span class="line">print(c)</span><br><span class="line">print(<span class="string">'squeeze, dim=2:'</span>) <span class="comment"># 无作用</span></span><br><span class="line">c = torch.squeeze(aa, dim=<span class="number">2</span>)</span><br><span class="line">print(c)</span><br><span class="line">print(<span class="string">'squeeze, dim=-1:'</span>) <span class="comment"># 无作用</span></span><br><span class="line">c = torch.squeeze(aa, dim=<span class="number">-1</span>)</span><br><span class="line">print(c)</span><br><span class="line">print(<span class="string">'squeeze, dim=-2:'</span>) <span class="comment"># 无作用</span></span><br><span class="line">c = torch.squeeze(aa, dim=<span class="number">-2</span>)</span><br><span class="line">print(c)</span><br><span class="line">print(<span class="string">'*'</span>*<span class="number">20</span>)</span><br><span class="line">print(<span class="string">'squeeze, dim=-3:'</span>) <span class="comment"># 去除最外层</span></span><br><span class="line">c = torch.squeeze(aa, dim=<span class="number">-3</span>)</span><br><span class="line">print(c)</span><br><span class="line">print(<span class="string">'*'</span>*<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># max可作为维度的自然数范围是[0,矩阵层数-1=2]</span></span><br><span class="line">d = torch.max(aaa)</span><br><span class="line">print(d)</span><br><span class="line">print(<span class="string">'max, dim=0:'</span>)</span><br><span class="line">d, _ = torch.max(aaa, dim=<span class="number">0</span>) <span class="comment"># size_d:3 x 4，按第一维求最大</span></span><br><span class="line">print(d)</span><br><span class="line">print(<span class="string">'max, dim=1:'</span>)</span><br><span class="line">d, _ = torch.max(aaa, dim=<span class="number">1</span>) <span class="comment"># size_d:2 x 4，按第二维求最大</span></span><br><span class="line">print(d)</span><br><span class="line">print(<span class="string">'max, dim=2:'</span>)</span><br><span class="line">d, _ = torch.max(aaa, dim=<span class="number">2</span>) <span class="comment"># size_d:2 x 3，按第三维求最大</span></span><br><span class="line">print(d)</span><br><span class="line">print(<span class="string">'max, dim=-1:'</span>)</span><br><span class="line">d, _ = torch.max(aaa, dim=<span class="number">-1</span>) <span class="comment"># equivalent to dim=2</span></span><br><span class="line">print(d)</span><br><span class="line">print(<span class="string">'max, dim=-2:'</span>)</span><br><span class="line">d, _ = torch.max(aaa, dim=<span class="number">-2</span>) <span class="comment"># equivalent to dim=1</span></span><br><span class="line">print(d)</span><br><span class="line">print(<span class="string">'max, dim=-3:'</span>)</span><br><span class="line">d, _ = torch.max(aaa, dim=<span class="number">-3</span>) <span class="comment"># equivalent to dim=0</span></span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><ul><li><strong>输出</strong><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">unsqueeze, dim=<span class="number">0</span>:</span><br><span class="line">tensor([[[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">         [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">         [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]]])</span><br><span class="line">unsqueeze, dim=<span class="number">1</span>:</span><br><span class="line">tensor([[[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>]],</span><br><span class="line"></span><br><span class="line">        [[ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>]],</span><br><span class="line"></span><br><span class="line">        [[ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]]])</span><br><span class="line">unsqueeze, dim=<span class="number">2</span>:</span><br><span class="line">tensor([[[ <span class="number">1</span>],</span><br><span class="line">         [ <span class="number">2</span>],</span><br><span class="line">         [ <span class="number">3</span>],</span><br><span class="line">         [ <span class="number">4</span>]],</span><br><span class="line"></span><br><span class="line">        [[ <span class="number">5</span>],</span><br><span class="line">         [ <span class="number">6</span>],</span><br><span class="line">         [ <span class="number">7</span>],</span><br><span class="line">         [ <span class="number">8</span>]],</span><br><span class="line"></span><br><span class="line">        [[ <span class="number">9</span>],</span><br><span class="line">         [<span class="number">10</span>],</span><br><span class="line">         [<span class="number">11</span>],</span><br><span class="line">         [<span class="number">12</span>]]])</span><br><span class="line">unsqueeze, dim=<span class="number">-1</span>:</span><br><span class="line">tensor([[[ <span class="number">1</span>],</span><br><span class="line">         [ <span class="number">2</span>],</span><br><span class="line">         [ <span class="number">3</span>],</span><br><span class="line">         [ <span class="number">4</span>]],</span><br><span class="line"></span><br><span class="line">        [[ <span class="number">5</span>],</span><br><span class="line">         [ <span class="number">6</span>],</span><br><span class="line">         [ <span class="number">7</span>],</span><br><span class="line">         [ <span class="number">8</span>]],</span><br><span class="line"></span><br><span class="line">        [[ <span class="number">9</span>],</span><br><span class="line">         [<span class="number">10</span>],</span><br><span class="line">         [<span class="number">11</span>],</span><br><span class="line">         [<span class="number">12</span>]]])</span><br><span class="line">********************</span><br><span class="line">squeeze, dim=<span class="number">0</span>:</span><br><span class="line">tensor([[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">        [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">        [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br><span class="line">squeeze, dim=<span class="number">1</span>:</span><br><span class="line">tensor([[[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">         [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">         [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]]])</span><br><span class="line">squeeze, dim=<span class="number">2</span>:</span><br><span class="line">tensor([[[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">         [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">         [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]]])</span><br><span class="line">squeeze, dim=<span class="number">-1</span>:</span><br><span class="line">tensor([[[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">         [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">         [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]]])</span><br><span class="line">squeeze, dim=<span class="number">-2</span>:</span><br><span class="line">tensor([[[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">         [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">         [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]]])</span><br><span class="line">********************</span><br><span class="line">squeeze, dim=<span class="number">-3</span>:</span><br><span class="line">tensor([[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">        [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">        [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br><span class="line">********************</span><br><span class="line">tensor(<span class="number">12</span>)</span><br><span class="line">max, dim=<span class="number">0</span>:</span><br><span class="line">tensor([[ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>],</span><br><span class="line">        [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">        [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br><span class="line">max, dim=<span class="number">1</span>:</span><br><span class="line">tensor([[ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>],</span><br><span class="line">        [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br><span class="line">max, dim=<span class="number">2</span>:</span><br><span class="line">tensor([[ <span class="number">4</span>,  <span class="number">8</span>, <span class="number">12</span>],</span><br><span class="line">        [<span class="number">12</span>,  <span class="number">4</span>,  <span class="number">8</span>]])</span><br><span class="line">max, dim=<span class="number">-1</span>:</span><br><span class="line">tensor([[ <span class="number">4</span>,  <span class="number">8</span>, <span class="number">12</span>],</span><br><span class="line">        [<span class="number">12</span>,  <span class="number">4</span>,  <span class="number">8</span>]])</span><br><span class="line">max, dim=<span class="number">-2</span>:</span><br><span class="line">tensor([[ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>],</span><br><span class="line">        [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br><span class="line">max, dim=<span class="number">-3</span>:</span><br><span class="line">tensor([[ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>],</span><br><span class="line">        [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">        [ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;torch-unsqueeze-，torch-squeeze-，torch-max-测试&quot;&gt;&lt;a href=&quot;#torch-unsqueeze-，torch-squeeze-，torch-max-测试&quot; class=&quot;headerlink&quot; title=&quot;torc
      
    
    </summary>
    
      <category term="原创" scheme="http://16061182.com/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="笔记" scheme="http://16061182.com/categories/%E5%8E%9F%E5%88%9B/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://16061182.com/tags/python/"/>
    
      <category term="torch" scheme="http://16061182.com/tags/torch/"/>
    
  </entry>
  
  <entry>
    <title>2019/7/11 数学</title>
    <link href="http://16061182.com/2019/07/11/7_11_%E6%95%B0%E5%AD%A6/"/>
    <id>http://16061182.com/2019/07/11/7_11_数学/</id>
    <published>2019-07-11T15:45:31.294Z</published>
    <updated>2019-07-11T16:17:56.553Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数学分析"><a href="#数学分析" class="headerlink" title="数学分析"></a>数学分析</h2><h3 id="一）复习进度"><a href="#一）复习进度" class="headerlink" title="一）复习进度"></a>一）复习进度</h3><h5 id="第一章-函数-极限-连续"><a href="#第一章-函数-极限-连续" class="headerlink" title="第一章 函数 极限 连续"></a>第一章 函数 极限 连续</h5><ul><li>函数<ul><li>内容精讲<ul><li>定义</li><li>重要性质、定理、公式</li></ul></li><li>例题分析<ul><li>求分段函数的复合函数</li><li>关于极限函数有界（无界）的讨论</li></ul></li></ul></li><li>极限<ul><li>内容精讲 <ul><li>定义</li><li>重要性质、定理、公式</li><li>计算极限的一些有关方法</li><li></li></ul></li><li>例题分析<ul><li>求函数的极限</li><li>已知极限值求其中的某些参数，或已知极限求另一与此有关的某极限 </li></ul></li></ul></li><li>函数的连续与间断<ul><li>内容精讲 <ul><li>定义</li><li>重要性质、定理、公式</li></ul></li><li>例题分析<ul><li>讨论函数的连续与间断</li><li>在连续条件下求参数</li><li>讨论有极限定义的函数的连续性或间断点的类型（这类题需要先通过计算消去极限符号） </li></ul></li></ul></li></ul><h5 id="第二章-一元函数微分学"><a href="#第二章-一元函数微分学" class="headerlink" title="第二章 一元函数微分学"></a>第二章 一元函数微分学</h5><ul><li>导数与微分，导数的计算<ul><li>定义 </li></ul></li></ul><h3 id="二）例题解法"><a href="#二）例题解法" class="headerlink" title="二）例题解法"></a>二）例题解法</h3><p>感觉写在这里不如直接写在书上，以后不再更新:)</p><p>函数的极限主要是七类问题：<code>0/0</code>、<code>∞/∞</code>、<code>0·∞</code>、<code>∞-∞</code>、<code>1^∞</code>、<code>0^0</code>、<code>∞^0</code>。</p><table><thead><tr><th>题目</th><th>类型</th><th>解法</th></tr></thead><tbody><tr><td>P19 例11</td><td><code>0/0</code>型</td><td>使用洛必达法则或佩亚诺余项泰勒公式展开，根据极限存在且不为零的条件，若分式的分子极限为0，则分母的极限也一定为0，否则极限会不存在，以洛必达法则为例，在不断求高阶导数的过程中，根据分母极限为0的条件找出两个等式，即可解出a，b两个值</td></tr><tr><td>P20 例12</td><td><code>∞-∞</code>型</td><td>解题方法类似P18例8，同样根据条件得出分式的分母极限为0来求解参数</td></tr><tr><td>P21 例13</td><td><code>1^∞</code>型</td><td>解题方法类似P18例9</td></tr><tr><td>P22例14</td><td>存在f(x)，类型未知</td><td>解题方法类似P18例9，但是后边要注意运用等价无穷小的替换条件</td></tr><tr><td>P22 例15</td><td>存在f(x)，类型未知</td><td>当尝试其他方法无果时，考虑把目标函数和已知极限的函数做差，并求出差的极限，以此求出目标函数的极限</td></tr><tr><td><br></td><td></td><td></td></tr><tr><td><br></td><td></td><td></td></tr></tbody></table><h2 id="高等代数"><a href="#高等代数" class="headerlink" title="高等代数"></a>高等代数</h2><h3 id="一）复习进度-1"><a href="#一）复习进度-1" class="headerlink" title="一）复习进度"></a>一）复习进度</h3><h5 id="行列式"><a href="#行列式" class="headerlink" title="行列式"></a>行列式</h5><ul><li>内容精讲</li><li>例题分析<ul><li>数字型行列式的计算（P23） </li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数学分析&quot;&gt;&lt;a href=&quot;#数学分析&quot; class=&quot;headerlink&quot; title=&quot;数学分析&quot;&gt;&lt;/a&gt;数学分析&lt;/h2&gt;&lt;h3 id=&quot;一）复习进度&quot;&gt;&lt;a href=&quot;#一）复习进度&quot; class=&quot;headerlink&quot; title=&quot;一）复习进
      
    
    </summary>
    
      <category term="复习笔记" scheme="http://16061182.com/categories/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="数学" scheme="http://16061182.com/categories/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="极限" scheme="http://16061182.com/tags/%E6%9E%81%E9%99%90/"/>
    
      <category term="导数" scheme="http://16061182.com/tags/%E5%AF%BC%E6%95%B0/"/>
    
      <category term="行列式" scheme="http://16061182.com/tags/%E8%A1%8C%E5%88%97%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>some tips (1)</title>
    <link href="http://16061182.com/2019/07/11/some%20tips%20(1)/"/>
    <id>http://16061182.com/2019/07/11/some tips (1)/</id>
    <published>2019-07-11T13:49:37.222Z</published>
    <updated>2019-08-18T08:33:35.236Z</updated>
    
    <content type="html"><![CDATA[<p>文章内容来自网络，如有侵权请作者和我联系：<a href="mailto:983414728@qq.com" target="_blank" rel="noopener">983414728@qq.com</a></p><h3 id="准确率、精确率、召回率和F值"><a href="#准确率、精确率、召回率和F值" class="headerlink" title="准确率、精确率、召回率和F值"></a>准确率、精确率、召回率和F值</h3><ul><li>TP-将正类预测为正类</li><li>FN-将正类预测为负类</li><li>FP-将负类预测位正类</li><li>TN-将负类预测位负类</li></ul><p>准确率（正确率）=所有预测正确的样本/总的样本  （TP+TN）/总<br>精确率=  将正类预测为正类 / 所有预测为正类 TP/（TP+FP）<br>召回率 = 将正类预测为正类 / 所有正真的正类 TP/（TP+FN）<br>F值 = 正确率 * 召回率 * 2 / (正确率 + 召回率) （F 值即为正确率和召回率的<strong>调和平均值</strong>）</p><h3 id="conda卸载步骤"><a href="#conda卸载步骤" class="headerlink" title="conda卸载步骤"></a>conda卸载步骤</h3><p>1.删除Anaconda安装目录下的envs和pkgs两个文件夹<br>2.卸载Anaconda<br>3.如果重新安装后还有问题，建议换个文件夹作为新的安装路径</p><h3 id="conda多环境串用问题"><a href="#conda多环境串用问题" class="headerlink" title="conda多环境串用问题"></a>conda多环境串用问题</h3><p>安装conda时不要勾选register</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文章内容来自网络，如有侵权请作者和我联系：&lt;a href=&quot;mailto:983414728@qq.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;983414728@qq.com&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;准确率、精确率、召回率和F值&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="笔记" scheme="http://16061182.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="conda" scheme="http://16061182.com/tags/conda/"/>
    
      <category term="准确率" scheme="http://16061182.com/tags/%E5%87%86%E7%A1%AE%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>转载：用conda创建python虚拟环境</title>
    <link href="http://16061182.com/2019/07/11/%E8%BD%AC%E8%BD%BD%EF%BC%9A%E7%94%A8conda%E5%88%9B%E5%BB%BApython%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    <id>http://16061182.com/2019/07/11/转载：用conda创建python虚拟环境/</id>
    <published>2019-07-10T18:11:22.105Z</published>
    <updated>2019-08-18T08:34:05.288Z</updated>
    
    <content type="html"><![CDATA[<p>文章转载自<a href="https://blog.csdn.net/lyy14011305/article/details/59500819" target="_blank" rel="noopener">https://blog.csdn.net/lyy14011305/article/details/59500819</a>如有侵权请作者和我联系：<a href="mailto:983414728@qq.com" target="_blank" rel="noopener">983414728@qq.com</a></p><p><span style="font-size:14px;">1、首先在所在系统中安装Anaconda。可以打开命令行输入conda -V检验是否安装以及当前conda的版本。<br></span></p><p><span style="font-size:14px;">2、conda常用的命令。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp; 1）conda list 查看安装了哪些包。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp; 2）conda env list 或 conda info -e 查看当前存在哪些虚拟环境</span></p><p><span style="font-size:14px;">&nbsp; &nbsp; 3）conda update conda 检查更新当前conda</span></p><p><span style="font-size:14px;">3、创建python虚拟环境。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp; &nbsp;使用 <span style="color:#ff0000;">conda create -n your_env_name python=X.X（2.7、3.6等)</span>命令创建python版本为X.X、名字为your_env_name的虚拟环境。your_env_name文件可以在Anaconda安装目录envs文件下找到。</span></p><p><span style="font-size:14px;">4、使用激活(或切换不同python版本)的虚拟环境。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp; 打开命令行输入python --version可以检查当前python的版本。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp; 使用如下命令即可&nbsp;激活你的虚拟环境(即将python的版本改变)。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp; Linux:&nbsp;<span style="font-size:14px;">&nbsp;</span><span style="font-size:14px;color:rgb(255,0,0);">source activate your_env_name</span><span style="font-size:14px;">(虚拟环境名称)</span></span></p><p><span style="font-size:14px;"><span style="font-size:14px;">&nbsp; &nbsp; Windows:&nbsp;<span style="font-size:14px;color:rgb(255,0,0);">activate your_env_name</span><span style="font-size:14px;">(虚拟环境名称)</span></span></span></p><p><span style="font-size:14px;">&nbsp; &nbsp;这是再使用python --version可以检查当前python版本是否为想要的。</span></p><p><span style="font-size:14px;">5、对虚拟环境中安装额外的包。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp; 使用命令<span style="color:#ff0000;">conda install -n your_env_name [package]</span>即可安装package到your_env_name中</span></p><p><span style="font-size:14px;">6、关闭虚拟环境(即从当前环境退出返回使用PATH环境中的默认python版本)。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp;使用如下命令即可。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp;Linux:&nbsp;<span style="font-size:14px;"><span style="color:#ff0000;">source deactivate</span></span></span></p><p><span style="font-size:14px;"><span style="font-size:14px;"><span style="color:#ff0000;">&nbsp; &nbsp;</span>Windows:&nbsp;<span style="color:rgb(255,0,0);font-size:14px;">deactivate</span></span></span></p><p><span style="font-size:14px;">7、删除虚拟环境。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp;使用命令<span style="color:#ff0000;">conda remove -n your_env_name(虚拟环境名称) --all</span>， 即可删除。</span></p><p><span style="font-size:14px;">8、删除环境中的某个包。</span></p><p><span style="font-size:14px;">&nbsp; &nbsp;使用命令conda remove --name your_env_name&nbsp; package_name 即可。</span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文章转载自&lt;a href=&quot;https://blog.csdn.net/lyy14011305/article/details/59500819&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/lyy1401130
      
    
    </summary>
    
      <category term="转载" scheme="http://16061182.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="conda" scheme="http://16061182.com/tags/conda/"/>
    
      <category term="python" scheme="http://16061182.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>2019/7/6 数学</title>
    <link href="http://16061182.com/2019/07/06/7_6_%E6%95%B0%E5%AD%A6/"/>
    <id>http://16061182.com/2019/07/06/7_6_数学/</id>
    <published>2019-07-06T14:45:22.539Z</published>
    <updated>2019-07-10T18:09:37.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数学分析"><a href="#数学分析" class="headerlink" title="数学分析"></a>数学分析</h1><h3 id="求极限的通用方法"><a href="#求极限的通用方法" class="headerlink" title="求极限的通用方法"></a>求极限的通用方法</h3><table><thead><tr><th>方法论</th><th>注意事项</th></tr></thead><tbody><tr><td>四则运算法则</td><td>分开之后的项的<font color="#FF0000">极限存在</font>时才可以使用</td></tr><tr><td>等价无穷小替换</td><td>只能替换<font color="#FF0000">整个式子的因子</font>使用该方法替换的<font color="#FF0000">精细度</font>不如使用佩亚诺余项泰勒公式展开</td></tr><tr><td>洛必达法则</td><td>分子和分母需要在中心的去心邻域内可导；<code>∞/∞</code>型的洛必达法则实际上并不要求满足f(x)趋近于∞，甚至不要求其存在（指趋近于A或∞）</td></tr><tr><td>佩亚诺余项泰勒公式</td><td>x-&gt;0的<code>0/0</code>型式子推荐使用</td></tr><tr><td>积分和式求极限的公式</td><td>还没有复习到积分，暂时略过</td></tr><tr><td>夹逼定理</td><td>可以作为判断极限存在的法则，目前没有遇到需要用夹逼定理解题的情况</td></tr></tbody></table><h3 id="例题解法"><a href="#例题解法" class="headerlink" title="例题解法"></a>例题解法</h3><p>函数的极限主要是七类问题：<code>0/0</code>、<code>∞/∞</code>、<code>0·∞</code>、<code>∞-∞</code>、<code>1^∞</code>、<code>0^0</code>、<code>∞^0</code>。</p><table><thead><tr><th>题目</th><th>类型</th><th>解法</th></tr></thead><tbody><tr><td>P13 例1</td><td><code>∞/∞</code>型</td><td>直接提出并约去无穷大因子</td></tr><tr><td>P13 例2</td><td><code>0/0</code>型</td><td>遇到不规则幂，先化为以e为底的指数形式，使用等价无穷小<code>e^x-1~1</code>替换，再使用洛必达法则</td></tr><tr><td>P14 例3</td><td><code>0/0</code>型</td><td>根式与平方的比值，直接使用洛必达法则或佩亚诺余项</td></tr><tr><td>P15 例4</td><td>略（积分求导暂时未复习到）</td><td>略</td></tr><tr><td>P15 例5</td><td><code>0/0</code>型</td><td>含有三角函数，先使用等价无穷小替换因子，通过尝试发现不满足洛必达使用条件，直接拆分后分别求极限即可</td></tr><tr><td>P16 例6</td><td>略</td><td>略</td></tr><tr><td>P17 例7</td><td><code>∞-∞</code>型</td><td>通分后化为<code>0/0</code>型，使用洛必达法则求解，此题还考察了三角函数的变形与化简，若不化简会增大计算量</td></tr><tr><td>P18 例8</td><td><code>∞-∞</code>型</td><td>a+b形式，除以一个a-b再乘以一个a-b，使用平方差公式化简，转化成<code>∞/∞</code>型，直接提出无穷大因子得出结果</td></tr><tr><td>P18 例9</td><td><code>1^∞型</code></td><td>见[1]</td></tr><tr><td>P18 例10</td><td>略</td><td>略</td></tr></tbody></table><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p>[1]这种类型的问题一般有两种方法处理</p><p>其中一个方法是把极限式化成<br>$$<br>\lim_{z\rightarrow0}(1+z)^{\frac{1}{z}}<br>$$<br>的形式，然后再利用重要极限<br>$$<br>\lim_{z\rightarrow0}(1+z)^{\frac{1}{z}} = e<br>$$<br>还有一种方法是把形如<br>$$<br>u(x)^{v(x)}<br>$$<br>的原式化成指数类型<br>$$<br>u(x)^{v(x)} = e^{v(x)\ln u(x)}<br>$$<br>然后讨论<br>$$<br>\lim_{x\rightarrow*}v(x)\ln u(x)<br>$$<br>最后再把结果带入原式得到最终结果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数学分析&quot;&gt;&lt;a href=&quot;#数学分析&quot; class=&quot;headerlink&quot; title=&quot;数学分析&quot;&gt;&lt;/a&gt;数学分析&lt;/h1&gt;&lt;h3 id=&quot;求极限的通用方法&quot;&gt;&lt;a href=&quot;#求极限的通用方法&quot; class=&quot;headerlink&quot; title=&quot;求
      
    
    </summary>
    
      <category term="复习笔记" scheme="http://16061182.com/categories/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="数学" scheme="http://16061182.com/categories/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="极限" scheme="http://16061182.com/tags/%E6%9E%81%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>成都重庆游记</title>
    <link href="http://16061182.com/2019/06/28/%E6%88%90%E9%83%BD%E9%87%8D%E5%BA%86%E6%B8%B8%E8%AE%B0/"/>
    <id>http://16061182.com/2019/06/28/成都重庆游记/</id>
    <published>2019-06-28T10:23:59.182Z</published>
    <updated>2019-06-28T10:26:26.984Z</updated>
    
    <content type="html"><![CDATA[<p>从重庆回到北京，已经是昨天上午的事情了。连续睡了十几个小时，现在终于恢复了精神，能够坐在电脑前好好写完这篇游记了。</p><p>主要来谈谈我对成都和重庆的整体感觉。这两座城市的实际风貌和我去之前对它们的印象差别不大，尤其是成都，那种悠闲又舒适的感觉能让你真真切切地感受到。成都的街头，清澈而宁静，空气中甚至没有想象中的那种闷热。走在清凉的树荫下（这些树绝不是北京常见的树，虽然我也叫不上来名字），四周没有车辆和行人的喧嚣，这里的每一处都仿佛是你脑海中那种老城市的样子。偶尔低头嗅一嗅路边的花，或者顺手摘下一片树叶，所见所感虽是异乡风情，却又有种掩盖不住的熟悉滋味在心头涌动，大概是那种可以触及的真实感让人感到由衷的亲切吧。不知怎的，我只不过是在这座城市的街道漫步一番，就已经彻底爱上了这座城市。我们的住所附近，街道两旁是各种店铺，这里的店铺很小，但是分布十分密集。相同名字的两家连锁店，甚至在各自门口可以互相看到。正是由于店铺的小、多、杂，在这里不论是吃饭、购物还是想做其他事，往往在一个街区之内就能找到解决之地。这也是我认为成都是座“悠闲”、“舒适”的城市的重要原因。不论是在较近的宽窄巷子、人民公园、武侯祠、锦里，还是在较远的都江堰、青城山，我们都在不小的运动量的加持下度过了舒适而愉快的一天，这一点和在重庆时那种极易获得疲惫感比起来，还是有不小的差别。在成都的最后一天晚上，我在公寓走廊的窗边静静伫立，四周建筑物里泛出的那种星星点点的亮光，和印象中商业区那种通宵的灯烛辉煌有着极大差别。朋友对我说，这种夜景有什么好看的，我却站在窗边，久久不愿离去。也许，我面前这座城市的夜景不是最美的，但是仔细品味，它绝对令你惊奇：这分明是散落在地上的星空！也许这样的描述更容易让人理解：一般我们印象中的城市夜景所代表的含义（抑或是给人的感觉）是“昼”，而成都的夜景，却是真真正正代表了“夜”。</p><p>不舍地离开了成都，我们来到了重庆。这里给人的印象就是“立体感”。不论是建筑还是路面，可能远者和近者都不在一个水平面上。即使曾在脑海中多次想象，然实际见到时仍让我叹为观止。在抵达重庆的旅馆前，我们乘车从高地下来，然后又走上一块高地，绕来绕去终于抵达住宿地的大楼，又发现该建筑的与外界路面位于同一平面的大厅居然在“地上三层”（后来我们就习惯了，重庆的楼层设定不符合我们对楼层的常规印象，例如有时下了轻轨之后我们发现居然要往下走五楼才能到达地面）。“立体感”可以说是重庆给我的最深印象。但是很可惜，这样新奇的城市设定没有激发出我太多的探索欲，究其原因可能有两点：首先我们在成都游玩三天之后马不停蹄赶到重庆身体里积累了太多疲惫，其次重庆的气温不得不说实在太热。早听说过成都重庆很热，去了之后才发现“认认真真地热”的只有重庆。白天，我们出门的欲望相比在成都时大大降低；有一次出门后，同行者中最不怕热的一位直言差点热到崩溃。最后一天在磁器口古镇购物时，燥热的空气加上手上提着的重物让我们所有人的情绪都低落到极点。可以说，重庆的热让人们忽略了它的美。只有当夜晚悄然降临，人们登上南山观景台把重庆的夜景一览无遗时，才能真正发现，原来嘉陵江和长江围绕着的这座滨江小城、它上面盘旋着的公路、它旁边波光粼粼的江水以及江水畔的葱茏绿树，组合在一起竟然是这样美的一幅画卷。在这里，不需要建筑上反复变换的灯光效果来引起游人注目，只要这座城市静静地散发着它的美，人们就会睁大双眼，在观景台上久久地伫立。</p><p>以上就是我对成都和重庆这两座城市的一点个人印象。去完这两座城，下一个我最想去的国内的地方就是西部的沙漠了，希望这个旅程在不久的将来可以实现。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从重庆回到北京，已经是昨天上午的事情了。连续睡了十几个小时，现在终于恢复了精神，能够坐在电脑前好好写完这篇游记了。&lt;/p&gt;
&lt;p&gt;主要来谈谈我对成都和重庆的整体感觉。这两座城市的实际风貌和我去之前对它们的印象差别不大，尤其是成都，那种悠闲又舒适的感觉能让你真真切切地感受到。
      
    
    </summary>
    
      <category term="随笔" scheme="http://16061182.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="游记" scheme="http://16061182.com/categories/%E9%9A%8F%E7%AC%94/%E6%B8%B8%E8%AE%B0/"/>
    
    
      <category term="成都" scheme="http://16061182.com/tags/%E6%88%90%E9%83%BD/"/>
    
      <category term="重庆" scheme="http://16061182.com/tags/%E9%87%8D%E5%BA%86/"/>
    
  </entry>
  
  <entry>
    <title>迁移通知</title>
    <link href="http://16061182.com/2019/06/28/%E8%BF%81%E7%A7%BB%E9%80%9A%E7%9F%A5/"/>
    <id>http://16061182.com/2019/06/28/迁移通知/</id>
    <published>2019-06-28T10:19:56.913Z</published>
    <updated>2019-06-28T10:23:27.458Z</updated>
    
    <content type="html"><![CDATA[<h3 id="博客迁移到新电脑上，之前的文章全凉了，重新开始（反正也没啥有用的）"><a href="#博客迁移到新电脑上，之前的文章全凉了，重新开始（反正也没啥有用的）" class="headerlink" title="博客迁移到新电脑上，之前的文章全凉了，重新开始（反正也没啥有用的）~"></a>博客迁移到新电脑上，之前的文章全凉了，重新开始（反正也没啥有用的）~</h3><h3 id="ง-•-•-ง"><a href="#ง-•-•-ง" class="headerlink" title="(ง •_•)ง"></a>(ง •_•)ง</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;博客迁移到新电脑上，之前的文章全凉了，重新开始（反正也没啥有用的）&quot;&gt;&lt;a href=&quot;#博客迁移到新电脑上，之前的文章全凉了，重新开始（反正也没啥有用的）&quot; class=&quot;headerlink&quot; title=&quot;博客迁移到新电脑上，之前的文章全凉了，重新开始（反正
      
    
    </summary>
    
      <category term="公告" scheme="http://16061182.com/categories/%E5%85%AC%E5%91%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>老舍生平</title>
    <link href="http://16061182.com/2019/06/28/%E8%80%81%E8%88%8D%E7%94%9F%E5%B9%B3/"/>
    <id>http://16061182.com/2019/06/28/老舍生平/</id>
    <published>2019-06-28T10:11:53.557Z</published>
    <updated>2019-06-28T10:25:50.458Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>十九世纪末，大清王朝已经气息奄奄，日薄西山；然而它的都城北京却依然同往昔一样繁华而又喧闹。护国寺、白塔寺、土地庙、花儿市，这些富于北京特色的地方，人所必至；厂甸的风筝，大钟寺的豆汁，白云观外跑马场的赛马，又吸引了多少闲散的市民！而隆福寺开庙之日，“百货云集，凡珠玉、绫罗、衣服、饮食、古玩、字画、花鸟、虫鱼以及寻常日用之物，星卜、杂技之流，无所不有。”（注：清·富察敦崇：《燕京岁时记》，古籍出版社出版。）给古老的京城平添了不少富足景象。年年四月，春日融融，信男信女到妙峰山进香，“自始迄终，继昼以夜，人无停趾，香无断烟。”“人烟辐辏，车马喧阗，夜间灯火之繁，灿如列宿。”（注：清·富察敦崇：《燕京岁时记》，古籍出版社出版。）这些善良而又虔诚的人们，以自己的愚昧和迷信装点着清王朝末世的一片升平。——<a href="https://www.qisuu.la/du/19/19339/8846936.html" target="_blank" rel="noopener">《老舍评传》</a></p></blockquote><hr><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>我基本上是照着<a href="https://www.qisuu.la/du/19/19339/8846936.html" target="_blank" rel="noopener">《老舍评传》</a>写的，而且只详细写了创作《骆驼祥子》之前的老舍生平（因为感觉我们只讲骆驼祥子因此后面的不太重要），如果有需要我可以再修改。</p><h3 id="老舍出生"><a href="#老舍出生" class="headerlink" title="老舍出生"></a>老舍出生</h3><p>尽管大清帝国早已处在危急存亡之秋，但帝都北京城依然保持着往日的繁华，将种种暗流掩藏在华丽的外表下。正如老舍先生所说，当时的北京它是这样的充满了矛盾：“它污浊，它美丽，它衰老，它活泼，它杂乱，它安闲……”老舍先生，正是诞生于这样的北京城<sup>[1]</sup>。</p><p>一八九九年二月三日（清光绪二十四年十二月二十三日），这一天正当旧历“小年”。在这充满节日气息一天，老舍来到了人间。为了纪念老舍出生的这一天，他的父母给他取了一个吉祥的名字——庆春。但是生逢乱世，吉祥的名字并不能带给他一个吉祥的命运。老舍刚出生不久，八国联军就打进了北京城。老舍的父亲是一名旗兵，面对着强大的八国联军，他没有退缩，最终倒在了岗位上。父亲的死只是苦难命运的开始。八国联军攻入北京城之后，就开始了惨绝人寰的烧杀抢掠，年幼的老舍还险些在一次劫掠中丧命。洋兵的罪行深深地印在了老舍的脑海里，是老舍的童年记忆中挥之不去的阴影。</p><p>老舍的父亲和母亲都是旗人，但他们属于那种没落的旗人家族。由于八旗制度的束缚，到了清代后期，虽然一部分旗人仍无偿享受着优厚的贵族待遇，但是更多的旗人则由于种种规定和限制而陷入了无以为生的困境。旗人的家庭和苦难的生活没有局限了老舍的视野，反而给了他源源不断的创作灵感。因为老舍曾经真真切切地经历过下层人民的生活，并且和下层人民打过交道，因此他笔下的下层人民就有了不一样的真实感。</p><p>老舍虽然生活穷苦，但是他勤奋好学，以优异的成绩毕业，之后得到了一份待遇不错的劝学员工作。但是，面对自己所处的学界的黑暗，老舍毅然辞去了劝学员的工作。时值五四运动爆发，这场运动给老舍展现了一个不一样的世界，让他感受到了新的文学、新的思想的力量，老舍开始用批判的眼光看待社会。在辞去了劝学员的职务之后，老舍于一九二二年九月开始在天津的南开中学担任教员。在一九二三年初，老舍回到北京工作。这段期间，他的工资还不及他做劝学员时候的三分之一，但是老舍依然含泪坚持了下来，文人的脊梁从不曾弯曲。</p><p>老舍先生与宝广林（乐山）是挚友，在他的影响下，在各种思潮中处于朦胧状态的老舍认可了博爱主义的思想，加入了基督教。通过宝广林，老舍认识了燕京大学的英籍教授艾温士。艾温士很欣赏老舍，愿意介绍老舍到英国教书。一九二四年夏天，老舍离开了生活了二十六年的北京，登上了远渡重洋的海轮，开始了远走英国之旅。</p><h3 id="远走英国"><a href="#远走英国" class="headerlink" title="远走英国"></a>远走英国</h3><p>一九二四年夏，老舍远渡重洋，来到伦敦东方学院任华语教员。在伦敦的几年中，老舍除了教书和写作，还认真体会了伦敦的生活方式和英国人的民族性格。由于在当时中国是有名的弱国，因此大多数的英国人都对中国人有很不好的偏见，这种偏见老舍也无法幸免<sup>[2]</sup>。于是老舍在英国旅居的时间里，越来越感受到国家强大和民族复兴的重要意义，这份爱国主义情感在他心中扎根。尽管很多英国人并不友好，但是老舍依旧与一些当地人成为了朋友，这些人中有的后来出版了书，扉页上就写着献给老舍的话语。</p><p>在旅居伦敦的几年岁月中，老舍认识了许地山。在他的影响和爱国主义情感的推动下，老舍开始走上创作之路。老舍醉心于研究欧洲现代文学，最喜欢的作家是康拉德。在欧洲文学的熏陶下，老舍逐渐磨练出了现代长篇小说的创作技巧，同时他的写作风格也受到了欧洲文学的影响，例如他的《老张的哲学》，在形式上就与狄更斯的小说很相似。老舍在伦敦，连续创作了《老张的哲学》、《赵子曰》、《二马》三部长篇小说，这三部小说奠定了他在现代文学史上的地位，让他从此成为一名合格的作家<sup>[3]</sup>。</p><h3 id="在新加坡"><a href="#在新加坡" class="headerlink" title="在新加坡"></a>在新加坡</h3><p>老舍离开英国后，一方面由于路费不够，一方面由于想体验一下康拉德笔下的海上生活，他没有直接回国，而是先来到了新加坡，时值一九二九年冬初<sup>[4]</sup>。当时的新加坡是一个新型城市，中国人、马来人、印度人等各式各样的人在城市里辛苦劳作，建设着美丽的城市；而与此同时，他们也受着帝国主义和殖民主义的残酷压迫。这样的环境使年轻的人们形成了更加激烈、更加先进的思想，老舍也受到了这种思想的影响。看到中国华侨辛勤劳作的模样，他越来越感受到劳动人民的伟大，感觉这些靠着自己的双手打造世界的人们有着巨大的力量，这种力量也许可以改变中国的现状。</p><p>在这种思想的引导下，老舍创作了一部写给孩子们的中篇童话——《小坡的生日》，这部作品也体现了老舍当时的内心状态。</p><h3 id="回到祖国"><a href="#回到祖国" class="headerlink" title="回到祖国"></a>回到祖国</h3><p>怀着对故乡和亲人的深深的思念，老舍终于回到了魂牵梦绕的祖国。然而，祖国的现状并不想他在新加坡时想象的那样乐观。国内革命战争的失败、军阀的混战，让他体会到旧中国的黑暗。面对这样的中国，胸怀激情归来的游子感受到悲愤和迷惘。短暂逗留北平不久，与一九三零年夏天，老舍赴齐鲁大学文学院任教。</p><p>在济南的日子里，回想起“五三惨案”的场景，老舍真真切切地感受到了日本侵略者的残暴和国民党政府的不作为。济南人民虽有救亡图存之心，却只能把一腔热血空空抛洒于街头。想到这样的场景，老舍的文笔再也幽默不起来。带着一番愤慨之情，他创作了长篇小说《大明湖》。然而可惜的是，战火纷飞之中，这本书还未及印出，书稿就被焚毁，成为一大憾事。</p><p>一九三一年夏天，老舍回到北平与胡絜青女士结婚，然后又回到济南。在济南的四年里，老舍创作成果颇丰，长篇小说有《大明湖》、《猫城记》、《离婚》、《牛天赐传》，短篇小说有《微神》、《黑白李》等十五篇。他还发表了许多幽默诗文，后来总结在《老舍幽默诗文集》中出版。</p><h3 id="来到青岛"><a href="#来到青岛" class="headerlink" title="来到青岛"></a>来到青岛</h3><p>一九三四年七月，老舍辞去齐鲁大学的教职，想作为一个职业作家在上海闯荡一番。但是此时的上海已经不是老舍想象中的上海。国民党反动派的阴影笼罩下，上海处处危机四伏。不得已，老舍只能返回山东，在青岛的山东大学担任中国文学系教授。</p><p>在青岛任教的过程中，老舍见证了山东大学学生开展抗日救亡活动的热情，也见证了校方的冷漠和反动。最终，于一九三六年夏天，老舍从山东大学辞职。</p><p>离开山大之后，老舍开始从事专业写作。在青岛的这段日子是老舍创作成果最丰盛的时期之一。老舍先后编订了两个短篇集《樱海集》和《蛤藻集》，创作了中篇《月牙儿》。也是在这一时期，老舍开始创作《骆驼祥子》。</p><p>###创作《骆驼祥子》</p><p>老舍是个好客的人，非常欢迎朋友来家中做客。据他的妻子胡絜青先生回忆，当时有一位山大的教授来家中做客，说起北平有个洋车夫一辈子都想拉上自己的车，三起三落，末了还是受穷；还说起什么车夫也被“丘八”抓了去，结果偷出来三匹骆驼，等等。老舍听完这个故事之后，说洋车夫的这番事迹可以创作一部长篇小说，于是就真的创作起来了<sup>[5]</sup>。</p><p>老舍是个认真的人，在决定创作这部小说之后，就开始“入迷似的收集材料”。他想把“车夫和骆驼”作为小说的核心，为此甚至写信给养骆驼的朋友询问骆驼的习性。后来，老舍发现想要细致地了解骆驼必须亲自观察，而在当时的情况下很难实现，于是就把目光聚焦到随处可见的洋车夫身上。</p><p>老舍对洋车夫的观察，其实从很早就开始了。老舍曾经出身贫寒，与这些苦难的人们打的交道并不少，而洋车夫是社会底层人民的典型代表，因此老舍对他们有着充分的了解。在之前的作品中，老舍已经把人力车夫这个苦难的形象展现在读者眼前，但是受限于篇幅，没有做过多的刻画。而在《骆驼祥子》中，老舍终于可以把人力车夫这一形象完完整整地展现在读者眼前。典型的人物，成就了《骆驼祥子》的经典。老舍自己就说道：“这是一本最使我自己满意的作品。”</p><h3 id="《骆驼祥子》之后"><a href="#《骆驼祥子》之后" class="headerlink" title="*《骆驼祥子》之后"></a>*《骆驼祥子》之后</h3><p><strong>这部分来自百度百科“老舍”，可以忽略掉。</strong></p><ul><li>1937年，8月返齐鲁大学任教。11月只身奔赴武汉。</li><li>1938年，老舍被选为中华全国文艺界抗敌协会常务理事兼总务部主任，对内主持日常会务，对外代表“文协”，并全面负责总会的领导工作。同年7月，随文协西迁重庆。</li><li>1939年，老舍翻译完成的英文版《金瓶梅》在伦敦出版，译名为The Golden Lotus，此版是为西方比较权威的《金瓶梅》译本，先后发行四次 。</li><li>1944年，创作并由良友复兴印刷公司出版《四世同堂》第一卷《惶惑》。</li><li>1946年，受美国国务院邀请赴美讲学一年，同年出版《四世同堂》第二卷《偷生》。</li><li>1949年，接文艺界三十余位友人信后决定回国，10月离美，12月抵达天津。</li><li>1950年，中国民间文学研究会成立，任副理事长。</li><li>1951年，被北京市人民政府授予“人民艺术家”的称号。</li><li>1953年，当选为全国文联主席，作协副主席。</li><li>1957年，《茶馆》发表于《收获》第一期。</li><li>1966年，文革中不忍屈辱，自沉于北京太平湖。</li><li>1978年，老舍得到平反，恢复“人民艺术家”的称号。墓碑上刻写着老舍的一句话：“文艺界尽责的小卒，睡在这里。”</li></ul><hr><p>###引用</p><p>[1]《老舍文集》第三卷第222页</p><p>[2]《二马》中有相关描写</p><p>[3]百度百科“老舍”</p><p>[4]《我最爱的作家——康拉德》</p><p>[5]《重访老舍在山东的旧居》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;十九世纪末，大清王朝已经气息奄奄，日薄西山；然而它的都城北京却依然同往昔一样繁华而又喧闹。护国寺、白塔寺、土地庙、花儿市，这些富于北京特色的地方，人所必至；厂甸的风筝，大钟寺的豆汁，白云观外跑马场的赛马，又吸引了多少闲散的市民！而隆福寺开庙之日，“
      
    
    </summary>
    
      <category term="随笔" scheme="http://16061182.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="杂文" scheme="http://16061182.com/categories/%E9%9A%8F%E7%AC%94/%E6%9D%82%E6%96%87/"/>
    
    
      <category term="现代文学" scheme="http://16061182.com/tags/%E7%8E%B0%E4%BB%A3%E6%96%87%E5%AD%A6/"/>
    
      <category term="老舍" scheme="http://16061182.com/tags/%E8%80%81%E8%88%8D/"/>
    
  </entry>
  
</feed>
